//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ami_Control_Service
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisconnectMeterRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class DisconnectMeterRequest : object
    {
        
        private Ami_Control_Service.EndpointRequest MeterRequestField;
        
        private bool EmergencyOverrideField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointRequest MeterRequest
        {
            get
            {
                return this.MeterRequestField;
            }
            set
            {
                this.MeterRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool EmergencyOverride
        {
            get
            {
                return this.EmergencyOverrideField;
            }
            set
            {
                this.EmergencyOverrideField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndpointRequest", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class EndpointRequest : object
    {
        
        private string ElectronicSerialNumberField;
        
        private System.Uri StatusChangedServiceField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ElectronicSerialNumber
        {
            get
            {
                return this.ElectronicSerialNumberField;
            }
            set
            {
                this.ElectronicSerialNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri StatusChangedService
        {
            get
            {
                return this.StatusChangedServiceField;
            }
            set
            {
                this.StatusChangedServiceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestToken", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class RequestToken : object
    {
        
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.DeviceNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.DuplicateSubscriberEndpointFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.DuplicateSubscriberFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.DuplicateSubscriptionFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.EndpointNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.EndpointNotRegisteredFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.GroupNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.InvalidDateTimeRangeFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.MeterNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.MeterNotRegisteredFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.OperationNotSupportedFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.RequestNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.SubscriberEndpointNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.SubscriberNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.TooManyCommandsFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.TooManySubscribersFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Ami_Control_Service.ArgumentFault))]
    public partial class OperationFault : object
    {
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceNotFoundFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class DeviceNotFoundFault : Ami_Control_Service.OperationFault
    {
        
        private ulong MacAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong MacAddress
        {
            get
            {
                return this.MacAddressField;
            }
            set
            {
                this.MacAddressField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DuplicateSubscriberEndpointFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class DuplicateSubscriberEndpointFault : Ami_Control_Service.OperationFault
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DuplicateSubscriberFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class DuplicateSubscriberFault : Ami_Control_Service.OperationFault
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DuplicateSubscriptionFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class DuplicateSubscriptionFault : Ami_Control_Service.OperationFault
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndpointNotFoundFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class EndpointNotFoundFault : Ami_Control_Service.OperationFault
    {
        
        private string IdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndpointNotRegisteredFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class EndpointNotRegisteredFault : Ami_Control_Service.OperationFault
    {
        
        private string IdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupNotFoundFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class GroupNotFoundFault : Ami_Control_Service.OperationFault
    {
        
        private string GroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName
        {
            get
            {
                return this.GroupNameField;
            }
            set
            {
                this.GroupNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidDateTimeRangeFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class InvalidDateTimeRangeFault : Ami_Control_Service.OperationFault
    {
        
        private System.DateTime StartField;
        
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime Start
        {
            get
            {
                return this.StartField;
            }
            set
            {
                this.StartField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.DateTime End
        {
            get
            {
                return this.EndField;
            }
            set
            {
                this.EndField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidUriFormatFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class InvalidUriFormatFault : Ami_Control_Service.OperationFault
    {
        
        private System.Uri UriField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri Uri
        {
            get
            {
                return this.UriField;
            }
            set
            {
                this.UriField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeterNotFoundFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class MeterNotFoundFault : Ami_Control_Service.OperationFault
    {
        
        private string ElectronicSerialNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElectronicSerialNumber
        {
            get
            {
                return this.ElectronicSerialNumberField;
            }
            set
            {
                this.ElectronicSerialNumberField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeterNotRegisteredFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class MeterNotRegisteredFault : Ami_Control_Service.OperationFault
    {
        
        private string ElectronicSerialNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElectronicSerialNumber
        {
            get
            {
                return this.ElectronicSerialNumberField;
            }
            set
            {
                this.ElectronicSerialNumberField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationNotSupportedFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class OperationNotSupportedFault : Ami_Control_Service.OperationFault
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoValidTargetsFoundFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class NoValidTargetsFoundFault : Ami_Control_Service.OperationFault
    {
        
        private Ami_Control_Service.EndpointFailure[] InvalidEndpointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public Ami_Control_Service.EndpointFailure[] InvalidEndpoints
        {
            get
            {
                return this.InvalidEndpointsField;
            }
            set
            {
                this.InvalidEndpointsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestNotFinishedFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class RequestNotFinishedFault : Ami_Control_Service.OperationFault
    {
        
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestNotFoundFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class RequestNotFoundFault : Ami_Control_Service.OperationFault
    {
        
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriberEndpointNotFoundFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class SubscriberEndpointNotFoundFault : Ami_Control_Service.OperationFault
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriberNotFoundFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class SubscriberNotFoundFault : Ami_Control_Service.OperationFault
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TooManyCommandsFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class TooManyCommandsFault : Ami_Control_Service.OperationFault
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TooManyConcurrentRequestsFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class TooManyConcurrentRequestsFault : Ami_Control_Service.OperationFault
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TooManySubscribersFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class TooManySubscribersFault : Ami_Control_Service.OperationFault
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArgumentFault", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class ArgumentFault : Ami_Control_Service.OperationFault
    {
        
        private string ParameterNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParameterName
        {
            get
            {
                return this.ParameterNameField;
            }
            set
            {
                this.ParameterNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndpointFailure", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class EndpointFailure : object
    {
        
        private string ElectronicSerialNumberField;
        
        private Ami_Control_Service.FailureReason FailureReasonField;
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ElectronicSerialNumber
        {
            get
            {
                return this.ElectronicSerialNumberField;
            }
            set
            {
                this.ElectronicSerialNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.FailureReason FailureReason
        {
            get
            {
                return this.FailureReasonField;
            }
            set
            {
                this.FailureReasonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FailureReason", Namespace="http://www.itron.com/ami/2008/10/common")]
    public enum FailureReason : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unspecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TargetNotRegistered = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TargetNotFound = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommunicationError = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecurityFailure = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfigurationError = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OperationNotSupported = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorResponse = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoResponse = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidIdentifier = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidTargetState = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PublishingError = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TooManyRequests = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TypeMismatch = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadWriteDenied = 14,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityFault", Namespace="http://www.itron.com/ami/2008/10/security")]
    public partial class SecurityFault : object
    {
        
        private System.Guid IdField;
        
        private System.DateTime OccurredWhenField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime OccurredWhen
        {
            get
            {
                return this.OccurredWhenField;
            }
            set
            {
                this.OccurredWhenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndpointRequestResult", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class EndpointRequestResult : object
    {
        
        private Ami_Control_Service.RequestToken RequestTokenField;
        
        private string ElectronicSerialNumberField;
        
        private Ami_Control_Service.Result ResultField;
        
        private Ami_Control_Service.EndpointFailure MeterFailureField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.RequestToken RequestToken
        {
            get
            {
                return this.RequestTokenField;
            }
            set
            {
                this.RequestTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string ElectronicSerialNumber
        {
            get
            {
                return this.ElectronicSerialNumberField;
            }
            set
            {
                this.ElectronicSerialNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public Ami_Control_Service.Result Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public Ami_Control_Service.EndpointFailure MeterFailure
        {
            get
            {
                return this.MeterFailureField;
            }
            set
            {
                this.MeterFailureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://www.itron.com/ami/2008/10/common")]
    public enum Result : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReconnectMeterRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ReconnectMeterRequest : object
    {
        
        private Ami_Control_Service.EndpointRequest MeterRequestField;
        
        private bool IsUserInterventionRequiredField;
        
        private bool EmergencyOverrideField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointRequest MeterRequest
        {
            get
            {
                return this.MeterRequestField;
            }
            set
            {
                this.MeterRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public bool IsUserInterventionRequired
        {
            get
            {
                return this.IsUserInterventionRequiredField;
            }
            set
            {
                this.IsUserInterventionRequiredField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool EmergencyOverride
        {
            get
            {
                return this.EmergencyOverrideField;
            }
            set
            {
                this.EmergencyOverrideField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RestrictMeterRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class RestrictMeterRequest : object
    {
        
        private Ami_Control_Service.EndpointRequest MeterRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointRequest MeterRequest
        {
            get
            {
                return this.MeterRequestField;
            }
            set
            {
                this.MeterRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadConfigurationByGroupRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class DownloadConfigurationByGroupRequest : object
    {
        
        private Ami_Control_Service.GroupRequest GroupRequestField;
        
        private bool ForceFullUpfrontConfigurationReadField;
        
        private bool PerformDemandResetField;
        
        private bool PerformSelfReadField;
        
        private bool PerformBillingResetField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.GroupRequest GroupRequest
        {
            get
            {
                return this.GroupRequestField;
            }
            set
            {
                this.GroupRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public bool ForceFullUpfrontConfigurationRead
        {
            get
            {
                return this.ForceFullUpfrontConfigurationReadField;
            }
            set
            {
                this.ForceFullUpfrontConfigurationReadField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public bool PerformDemandReset
        {
            get
            {
                return this.PerformDemandResetField;
            }
            set
            {
                this.PerformDemandResetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public bool PerformSelfRead
        {
            get
            {
                return this.PerformSelfReadField;
            }
            set
            {
                this.PerformSelfReadField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public bool PerformBillingReset
        {
            get
            {
                return this.PerformBillingResetField;
            }
            set
            {
                this.PerformBillingResetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupRequest", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class GroupRequest : object
    {
        
        private string GroupNameField;
        
        private System.Uri StatusChangedServiceField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string GroupName
        {
            get
            {
                return this.GroupNameField;
            }
            set
            {
                this.GroupNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri StatusChangedService
        {
            get
            {
                return this.StatusChangedServiceField;
            }
            set
            {
                this.StatusChangedServiceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupRequestResult", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class GroupRequestResult : object
    {
        
        private Ami_Control_Service.RequestToken RequestTokenField;
        
        private string GroupNameField;
        
        private Ami_Control_Service.Result ResultField;
        
        private Ami_Control_Service.EndpointFailureResult EndpointFailureResultField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.RequestToken RequestToken
        {
            get
            {
                return this.RequestTokenField;
            }
            set
            {
                this.RequestTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string GroupName
        {
            get
            {
                return this.GroupNameField;
            }
            set
            {
                this.GroupNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public Ami_Control_Service.Result Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public Ami_Control_Service.EndpointFailureResult EndpointFailureResult
        {
            get
            {
                return this.EndpointFailureResultField;
            }
            set
            {
                this.EndpointFailureResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndpointFailureResult", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class EndpointFailureResult : object
    {
        
        private Ami_Control_Service.EndpointFailure[] FailuresField;
        
        private bool MaximumResultsSentField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointFailure[] Failures
        {
            get
            {
                return this.FailuresField;
            }
            set
            {
                this.FailuresField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool MaximumResultsSent
        {
            get
            {
                return this.MaximumResultsSentField;
            }
            set
            {
                this.MaximumResultsSentField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadConfigurationByEndpointsRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class DownloadConfigurationByEndpointsRequest : object
    {
        
        private Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequestField;
        
        private string ConfigurationNameField;
        
        private bool ForceFullUpfrontConfigurationReadField;
        
        private bool PerformDemandResetField;
        
        private bool PerformSelfReadField;
        
        private bool PerformBillingResetField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequest
        {
            get
            {
                return this.EndpointCollectionRequestField;
            }
            set
            {
                this.EndpointCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string ConfigurationName
        {
            get
            {
                return this.ConfigurationNameField;
            }
            set
            {
                this.ConfigurationNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public bool ForceFullUpfrontConfigurationRead
        {
            get
            {
                return this.ForceFullUpfrontConfigurationReadField;
            }
            set
            {
                this.ForceFullUpfrontConfigurationReadField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public bool PerformDemandReset
        {
            get
            {
                return this.PerformDemandResetField;
            }
            set
            {
                this.PerformDemandResetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public bool PerformSelfRead
        {
            get
            {
                return this.PerformSelfReadField;
            }
            set
            {
                this.PerformSelfReadField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public bool PerformBillingReset
        {
            get
            {
                return this.PerformBillingResetField;
            }
            set
            {
                this.PerformBillingResetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndpointCollectionRequest", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class EndpointCollectionRequest : object
    {
        
        private string[] ElectronicSerialNumbersField;
        
        private System.Uri StatusChangedServiceField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] ElectronicSerialNumbers
        {
            get
            {
                return this.ElectronicSerialNumbersField;
            }
            set
            {
                this.ElectronicSerialNumbersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri StatusChangedService
        {
            get
            {
                return this.StatusChangedServiceField;
            }
            set
            {
                this.StatusChangedServiceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndpointCollectionRequestResult", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class EndpointCollectionRequestResult : object
    {
        
        private Ami_Control_Service.RequestToken RequestTokenField;
        
        private Ami_Control_Service.Result ResultField;
        
        private Ami_Control_Service.EndpointFailureResult EndpointFailureResultField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.RequestToken RequestToken
        {
            get
            {
                return this.RequestTokenField;
            }
            set
            {
                this.RequestTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.Result Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public Ami_Control_Service.EndpointFailureResult EndpointFailureResult
        {
            get
            {
                return this.EndpointFailureResultField;
            }
            set
            {
                this.EndpointFailureResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeLimitingServiceByMetersRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ChangeLimitingServiceByMetersRequest : object
    {
        
        private Ami_Control_Service.EndpointCollectionRequest MeterCollectionRequestField;
        
        private Ami_Control_Service.ServiceMode ServiceModeField;
        
        private double DurationInSecondsField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointCollectionRequest MeterCollectionRequest
        {
            get
            {
                return this.MeterCollectionRequestField;
            }
            set
            {
                this.MeterCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.ServiceMode ServiceMode
        {
            get
            {
                return this.ServiceModeField;
            }
            set
            {
                this.ServiceModeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double DurationInSeconds
        {
            get
            {
                return this.DurationInSecondsField;
            }
            set
            {
                this.DurationInSecondsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceMode", Namespace="http://www.itron.com/ami/2008/10/control")]
    public enum ServiceMode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Off = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Low = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeLimitingServiceByGroupRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ChangeLimitingServiceByGroupRequest : object
    {
        
        private Ami_Control_Service.GroupRequest GroupRequestField;
        
        private Ami_Control_Service.ServiceMode ServiceModeField;
        
        private double DurationInSecondsField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.GroupRequest GroupRequest
        {
            get
            {
                return this.GroupRequestField;
            }
            set
            {
                this.GroupRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.ServiceMode ServiceMode
        {
            get
            {
                return this.ServiceModeField;
            }
            set
            {
                this.ServiceModeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double DurationInSeconds
        {
            get
            {
                return this.DurationInSecondsField;
            }
            set
            {
                this.DurationInSecondsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClearServiceLimitingByMetersRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ClearServiceLimitingByMetersRequest : object
    {
        
        private Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequest
        {
            get
            {
                return this.EndpointCollectionRequestField;
            }
            set
            {
                this.EndpointCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClearServiceLimitingByGroupRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ClearServiceLimitingByGroupRequest : object
    {
        
        private Ami_Control_Service.GroupRequest GroupRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.GroupRequest GroupRequest
        {
            get
            {
                return this.GroupRequestField;
            }
            set
            {
                this.GroupRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadServiceLimitingModeByMetersRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ReadServiceLimitingModeByMetersRequest : object
    {
        
        private Ami_Control_Service.EndpointCollectionRequest MeterCollectionRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointCollectionRequest MeterCollectionRequest
        {
            get
            {
                return this.MeterCollectionRequestField;
            }
            set
            {
                this.MeterCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadServiceLimitingModeByMetersResult", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ReadServiceLimitingModeByMetersResult : object
    {
        
        private Ami_Control_Service.RequestToken RequestTokenField;
        
        private Ami_Control_Service.Result ResultField;
        
        private Ami_Control_Service.EndpointFailureResult EndpointFailureResultField;
        
        private Ami_Control_Service.ReadServiceLimitingModeInfo[] ServiceLimitingModeField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.RequestToken RequestToken
        {
            get
            {
                return this.RequestTokenField;
            }
            set
            {
                this.RequestTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.Result Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public Ami_Control_Service.EndpointFailureResult EndpointFailureResult
        {
            get
            {
                return this.EndpointFailureResultField;
            }
            set
            {
                this.EndpointFailureResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public Ami_Control_Service.ReadServiceLimitingModeInfo[] ServiceLimitingMode
        {
            get
            {
                return this.ServiceLimitingModeField;
            }
            set
            {
                this.ServiceLimitingModeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadServiceLimitingModeInfo", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ReadServiceLimitingModeInfo : object
    {
        
        private string ElectronicSerialNumberField;
        
        private Ami_Control_Service.ServiceLimitingMode[] ServiceLimitingModesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ElectronicSerialNumber
        {
            get
            {
                return this.ElectronicSerialNumberField;
            }
            set
            {
                this.ElectronicSerialNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.ServiceLimitingMode[] ServiceLimitingModes
        {
            get
            {
                return this.ServiceLimitingModesField;
            }
            set
            {
                this.ServiceLimitingModesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceLimitingMode", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ServiceLimitingMode : object
    {
        
        private string ApplicationTypeField;
        
        private System.Nullable<int> ModeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string ApplicationType
        {
            get
            {
                return this.ApplicationTypeField;
            }
            set
            {
                this.ApplicationTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public System.Nullable<int> Mode
        {
            get
            {
                return this.ModeField;
            }
            set
            {
                this.ModeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PingByEndpointsRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class PingByEndpointsRequest : object
    {
        
        private Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequest
        {
            get
            {
                return this.EndpointCollectionRequestField;
            }
            set
            {
                this.EndpointCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetectLoadSideVoltageByMeterRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class DetectLoadSideVoltageByMeterRequest : object
    {
        
        private Ami_Control_Service.EndpointRequest MeterRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointRequest MeterRequest
        {
            get
            {
                return this.MeterRequestField;
            }
            set
            {
                this.MeterRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetectLoadSideVoltageByMeterResult", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class DetectLoadSideVoltageByMeterResult : object
    {
        
        private string ElectronicSerialNumberField;
        
        private Ami_Control_Service.RequestToken RequestTokenField;
        
        private Ami_Control_Service.Result ResultField;
        
        private System.Nullable<bool> IsVoltagePresentField;
        
        private Ami_Control_Service.EndpointFailure MeterFailureField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ElectronicSerialNumber
        {
            get
            {
                return this.ElectronicSerialNumberField;
            }
            set
            {
                this.ElectronicSerialNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.RequestToken RequestToken
        {
            get
            {
                return this.RequestTokenField;
            }
            set
            {
                this.RequestTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.Result Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Nullable<bool> IsVoltagePresent
        {
            get
            {
                return this.IsVoltagePresentField;
            }
            set
            {
                this.IsVoltagePresentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public Ami_Control_Service.EndpointFailure MeterFailure
        {
            get
            {
                return this.MeterFailureField;
            }
            set
            {
                this.MeterFailureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CriticalPeakPricingByMetersRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class CriticalPeakPricingByMetersRequest : object
    {
        
        private Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequestField;
        
        private Ami_Control_Service.CriticalPeakPricingParameters ParametersField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequest
        {
            get
            {
                return this.EndpointCollectionRequestField;
            }
            set
            {
                this.EndpointCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.CriticalPeakPricingParameters Parameters
        {
            get
            {
                return this.ParametersField;
            }
            set
            {
                this.ParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CriticalPeakPricingParameters", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class CriticalPeakPricingParameters : object
    {
        
        private System.DateTime StartTimeField;
        
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime StartTime
        {
            get
            {
                return this.StartTimeField;
            }
            set
            {
                this.StartTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.DateTime EndTime
        {
            get
            {
                return this.EndTimeField;
            }
            set
            {
                this.EndTimeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CriticalPeakPricingByGroupRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class CriticalPeakPricingByGroupRequest : object
    {
        
        private Ami_Control_Service.GroupRequest GroupRequestField;
        
        private Ami_Control_Service.CriticalPeakPricingParameters ParametersField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.GroupRequest GroupRequest
        {
            get
            {
                return this.GroupRequestField;
            }
            set
            {
                this.GroupRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.CriticalPeakPricingParameters Parameters
        {
            get
            {
                return this.ParametersField;
            }
            set
            {
                this.ParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleCriticalPeakPricingByMetersRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ScheduleCriticalPeakPricingByMetersRequest : object
    {
        
        private Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequestField;
        
        private Ami_Control_Service.ScheduleCppActivationParameters ActivationParametersField;
        
        private Ami_Control_Service.ScheduleCppPriceParameters PriceParametersField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequest
        {
            get
            {
                return this.EndpointCollectionRequestField;
            }
            set
            {
                this.EndpointCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public Ami_Control_Service.ScheduleCppActivationParameters ActivationParameters
        {
            get
            {
                return this.ActivationParametersField;
            }
            set
            {
                this.ActivationParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public Ami_Control_Service.ScheduleCppPriceParameters PriceParameters
        {
            get
            {
                return this.PriceParametersField;
            }
            set
            {
                this.PriceParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleCppActivationParameters", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ScheduleCppActivationParameters : object
    {
        
        private System.DateTime StartTimeField;
        
        private System.TimeSpan DurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime StartTime
        {
            get
            {
                return this.StartTimeField;
            }
            set
            {
                this.StartTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.TimeSpan Duration
        {
            get
            {
                return this.DurationField;
            }
            set
            {
                this.DurationField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleCppPriceParameters", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ScheduleCppPriceParameters : object
    {
        
        private string RateLabelField;
        
        private Ami_Control_Service.UnitOfMeasure UnitOfMeasureField;
        
        private Ami_Control_Service.Currency CurrencyField;
        
        private decimal PriceField;
        
        private System.Nullable<byte> TrailingDigitField;
        
        private System.Nullable<uint> IssuerEventIdField;
        
        private System.Nullable<uint> ProviderIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string RateLabel
        {
            get
            {
                return this.RateLabelField;
            }
            set
            {
                this.RateLabelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.UnitOfMeasure UnitOfMeasure
        {
            get
            {
                return this.UnitOfMeasureField;
            }
            set
            {
                this.UnitOfMeasureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public Ami_Control_Service.Currency Currency
        {
            get
            {
                return this.CurrencyField;
            }
            set
            {
                this.CurrencyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public decimal Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<byte> TrailingDigit
        {
            get
            {
                return this.TrailingDigitField;
            }
            set
            {
                this.TrailingDigitField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<uint> IssuerEventId
        {
            get
            {
                return this.IssuerEventIdField;
            }
            set
            {
                this.IssuerEventIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<uint> ProviderId
        {
            get
            {
                return this.ProviderIdField;
            }
            set
            {
                this.ProviderIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitOfMeasure", Namespace="http://www.itron.com/ami/2008/10/common")]
    public enum UnitOfMeasure : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kilowatts = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CubicMeter = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CubicFeet = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CentumCubicFeet = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsGallons = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImperialGallons = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Btu = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Liters = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gauge = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Absolute = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Currency", Namespace="http://www.itron.com/ami/2008/10/common")]
    public enum Currency : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lek = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlgerianDinar = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArgentinePeso = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AustralianDollar = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BahamianDollar = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BahrainiDinar = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Taka = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmenianDram = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BarbadosDollar = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BermudianDollar = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ngultrum = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Boliviano = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pula = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BelizeDollar = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SolomonIslandsDollar = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BruneiDollar = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kyat = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BurundiFranc = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Riel = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanadianDollar = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CapeVerdeEscudo = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaymanIslandsDollar = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SriLankaRupee = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChileanPeso = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YuanRenminbi = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ColombianPeso = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComoroFranc = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostaRicanColon = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CroatianKuna = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CubanPeso = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CzechKoruna = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DanishKrone = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DominicanPeso = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElSalvadorColon = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EthiopianBirr = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nakfa = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kroon = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FalklandIslandsPound = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FijiDollar = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DjiboutiFranc = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dalasi = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GibraltarPound = 292,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quetzal = 320,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GuineaFranc = 324,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GuyanaDollar = 328,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gourde = 332,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lempira = 340,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HongKongDollar = 344,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Forint = 348,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IcelandKrona = 352,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndianRupee = 356,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rupiah = 360,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IranianRial = 364,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IraqiDinar = 368,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewIsraeliSheqel = 376,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JamaicanDollar = 388,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yen = 392,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tenge = 398,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JordanianDinar = 400,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KenyanShilling = 404,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NorthKoreanWon = 408,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Won = 410,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KuwaitiDinar = 414,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Som = 417,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kip = 418,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LebanesePound = 422,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Loti = 426,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LatvianLats = 428,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LiberianDollar = 430,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LibyanDinar = 434,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LithuanianLitas = 440,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pataca = 446,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kwacha = 454,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MalaysianRinggit = 458,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rufiyaa = 462,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ouguiya = 478,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MauritiusRupee = 480,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MexicanPeso = 484,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tugrik = 496,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoldovanLeu = 498,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoroccanDirham = 504,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RialOmani = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NamibiaDollar = 516,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NepaleseRupee = 524,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetherlandsAntillianGuilder = 532,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArubanGuilder = 533,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vatu = 548,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewZealandDollar = 554,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CordobaOro = 558,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Naira = 566,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NorwegianKrone = 578,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PakistanRupee = 586,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Balboa = 590,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kina = 598,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Guarani = 600,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NuevoSol = 604,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhilippinePeso = 608,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GuineaBissauPeso = 624,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QatariRial = 634,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RussianRuble = 643,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RwandaFranc = 646,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaintHelenaPound = 654,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dobra = 678,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaudiRiyal = 682,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeychellesRupee = 690,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Leone = 694,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingaporeDollar = 702,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dong = 704,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SomaliShilling = 706,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rand = 710,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lilangeni = 748,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SwedishKrona = 752,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SwissFranc = 756,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyrianPound = 760,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Baht = 764,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paanga = 776,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrinidadAndTobagoDollar = 780,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UAEDirham = 784,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TunisianDinar = 788,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UgandaShilling = 800,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Denar = 807,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EgyptianPound = 818,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PoundSterling = 826,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TanzanianShilling = 834,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USDollar = 840,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PesoUruguayo = 858,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UzbekistanSum = 860,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tala = 882,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YemeniRial = 886,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZambianKwacha = 894,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewTaiwanDollar = 901,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PesoConvertible = 931,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZimbabweDollar = 932,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manat = 934,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cedi = 936,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BolivarFuerte = 937,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SudanesePound = 938,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UruguayPesoEnUnidadesIndexadas = 940,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerbianDinar = 941,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Metical = 943,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AzerbaijanianManat = 944,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewLeu = 946,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIREuro = 947,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIRFranc = 948,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TurkishLira = 949,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CFAFrancBEAC = 950,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EastCaribbeanDollar = 951,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CFAFrancBCEAO = 952,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CFPFranc = 953,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BondMarketsUnitsEuropeanCompositeUnit = 955,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EuropeanMonetaryUnit = 956,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EuropeanUnitOfAccount9 = 957,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EuropeanUnitOfAccount17 = 958,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gold = 959,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SDR = 960,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Silver = 961,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Platinum = 962,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Palladium = 964,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SurinamDollar = 968,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MalagasyAriary = 969,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnidadDeValorReal = 970,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Afghani = 971,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Somoni = 972,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kwanza = 973,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BelarussianRuble = 974,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BulgarianLev = 975,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CongoleseFranc = 976,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConvertibleMarks = 977,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Euro = 978,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MexicanUnidadDeInversion = 979,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hryvnia = 980,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lari = 981,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mvdol = 984,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Zloty = 985,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BrazilianReal = 986,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnidadesDeFomento = 990,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USDollarNextDay = 997,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USDollarSameDay = 998,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleCriticalPeakPricingByGroupRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ScheduleCriticalPeakPricingByGroupRequest : object
    {
        
        private Ami_Control_Service.GroupRequest GroupRequestField;
        
        private Ami_Control_Service.ScheduleCppActivationParameters ActivationParametersField;
        
        private Ami_Control_Service.ScheduleCppPriceParameters PriceParametersField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.GroupRequest GroupRequest
        {
            get
            {
                return this.GroupRequestField;
            }
            set
            {
                this.GroupRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public Ami_Control_Service.ScheduleCppActivationParameters ActivationParameters
        {
            get
            {
                return this.ActivationParametersField;
            }
            set
            {
                this.ActivationParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public Ami_Control_Service.ScheduleCppPriceParameters PriceParameters
        {
            get
            {
                return this.PriceParametersField;
            }
            set
            {
                this.PriceParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelCriticalPeakPricingByMetersRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class CancelCriticalPeakPricingByMetersRequest : object
    {
        
        private Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequest
        {
            get
            {
                return this.EndpointCollectionRequestField;
            }
            set
            {
                this.EndpointCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelCriticalPeakPricingByGroupRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class CancelCriticalPeakPricingByGroupRequest : object
    {
        
        private Ami_Control_Service.GroupRequest GroupRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.GroupRequest GroupRequest
        {
            get
            {
                return this.GroupRequestField;
            }
            set
            {
                this.GroupRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendGasModuleCommandByDevicesRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class SendGasModuleCommandByDevicesRequest : object
    {
        
        private Ami_Control_Service.DeviceCollectionRequest DeviceCollectionRequestField;
        
        private bool RetrieveBatteryInformationField;
        
        private bool RetrieveCollectionConfigurationField;
        
        private bool RetrieveDeliveryConfigurationField;
        
        private Ami_Control_Service.SetCollectionConfigurationParameters SetCollectionConfigurationParametersField;
        
        private Ami_Control_Service.SetDeliveryConfigurationParameters SetDeliveryConfigurationParametersField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.DeviceCollectionRequest DeviceCollectionRequest
        {
            get
            {
                return this.DeviceCollectionRequestField;
            }
            set
            {
                this.DeviceCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetrieveBatteryInformation
        {
            get
            {
                return this.RetrieveBatteryInformationField;
            }
            set
            {
                this.RetrieveBatteryInformationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetrieveCollectionConfiguration
        {
            get
            {
                return this.RetrieveCollectionConfigurationField;
            }
            set
            {
                this.RetrieveCollectionConfigurationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RetrieveDeliveryConfiguration
        {
            get
            {
                return this.RetrieveDeliveryConfigurationField;
            }
            set
            {
                this.RetrieveDeliveryConfigurationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ami_Control_Service.SetCollectionConfigurationParameters SetCollectionConfigurationParameters
        {
            get
            {
                return this.SetCollectionConfigurationParametersField;
            }
            set
            {
                this.SetCollectionConfigurationParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ami_Control_Service.SetDeliveryConfigurationParameters SetDeliveryConfigurationParameters
        {
            get
            {
                return this.SetDeliveryConfigurationParametersField;
            }
            set
            {
                this.SetDeliveryConfigurationParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceCollectionRequest", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class DeviceCollectionRequest : object
    {
        
        private ulong[] MacAddressesField;
        
        private System.Uri StatusChangedServiceField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ulong[] MacAddresses
        {
            get
            {
                return this.MacAddressesField;
            }
            set
            {
                this.MacAddressesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri StatusChangedService
        {
            get
            {
                return this.StatusChangedServiceField;
            }
            set
            {
                this.StatusChangedServiceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetCollectionConfigurationParameters", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class SetCollectionConfigurationParameters : object
    {
        
        private Ami_Control_Service.CollectionConfigurationType CollectionConfigurationTypeField;
        
        private System.Nullable<int> CollectionHourUtcField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.CollectionConfigurationType CollectionConfigurationType
        {
            get
            {
                return this.CollectionConfigurationTypeField;
            }
            set
            {
                this.CollectionConfigurationTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CollectionHourUtc
        {
            get
            {
                return this.CollectionHourUtcField;
            }
            set
            {
                this.CollectionHourUtcField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetDeliveryConfigurationParameters", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class SetDeliveryConfigurationParameters : object
    {
        
        private int DeliveryHourUtcField;
        
        private bool DeliveryEvery12HoursField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int DeliveryHourUtc
        {
            get
            {
                return this.DeliveryHourUtcField;
            }
            set
            {
                this.DeliveryHourUtcField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public bool DeliveryEvery12Hours
        {
            get
            {
                return this.DeliveryEvery12HoursField;
            }
            set
            {
                this.DeliveryEvery12HoursField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollectionConfigurationType", Namespace="http://www.itron.com/ami/2008/10/control")]
    public enum CollectionConfigurationType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentConsumption = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HourlyConsumption = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DailyConsumption = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceCollectionRequestResult", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class DeviceCollectionRequestResult : object
    {
        
        private Ami_Control_Service.RequestToken RequestTokenField;
        
        private Ami_Control_Service.Result ResultField;
        
        private Ami_Control_Service.EndpointFailureResult MeterFailureResultField;
        
        private Ami_Control_Service.DeviceFailureResult DeviceFailureResultField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.RequestToken RequestToken
        {
            get
            {
                return this.RequestTokenField;
            }
            set
            {
                this.RequestTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.Result Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public Ami_Control_Service.EndpointFailureResult MeterFailureResult
        {
            get
            {
                return this.MeterFailureResultField;
            }
            set
            {
                this.MeterFailureResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public Ami_Control_Service.DeviceFailureResult DeviceFailureResult
        {
            get
            {
                return this.DeviceFailureResultField;
            }
            set
            {
                this.DeviceFailureResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceFailureResult", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class DeviceFailureResult : object
    {
        
        private Ami_Control_Service.DeviceFailure[] FailuresField;
        
        private bool MaximumResultsSentField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.DeviceFailure[] Failures
        {
            get
            {
                return this.FailuresField;
            }
            set
            {
                this.FailuresField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool MaximumResultsSent
        {
            get
            {
                return this.MaximumResultsSentField;
            }
            set
            {
                this.MaximumResultsSentField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceFailure", Namespace="http://www.itron.com/ami/2008/10/common")]
    public partial class DeviceFailure : object
    {
        
        private ulong MacAddressField;
        
        private Ami_Control_Service.FailureReason FailureReasonField;
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ulong MacAddress
        {
            get
            {
                return this.MacAddressField;
            }
            set
            {
                this.MacAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public Ami_Control_Service.FailureReason FailureReason
        {
            get
            {
                return this.FailureReasonField;
            }
            set
            {
                this.FailureReasonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PingByGroupRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class PingByGroupRequest : object
    {
        
        private Ami_Control_Service.GroupRequest GroupRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.GroupRequest GroupRequest
        {
            get
            {
                return this.GroupRequestField;
            }
            set
            {
                this.GroupRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnableHaltedZigBeeRadioByMetersRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class EnableHaltedZigBeeRadioByMetersRequest : object
    {
        
        private Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequest
        {
            get
            {
                return this.EndpointCollectionRequestField;
            }
            set
            {
                this.EndpointCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeAllowC1218OverZigbeeFlagByEndpointsRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ChangeAllowC1218OverZigbeeFlagByEndpointsRequest : object
    {
        
        private Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequestField;
        
        private bool NewValueField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequest
        {
            get
            {
                return this.EndpointCollectionRequestField;
            }
            set
            {
                this.EndpointCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool NewValue
        {
            get
            {
                return this.NewValueField;
            }
            set
            {
                this.NewValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadTokenRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class DownloadTokenRequest : object
    {
        
        private string[] TokenField;
        
        private Ami_Control_Service.EndpointRequest MeterRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public Ami_Control_Service.EndpointRequest MeterRequest
        {
            get
            {
                return this.MeterRequestField;
            }
            set
            {
                this.MeterRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenDownloadResult", Namespace="http://www.itron.com/ami/2014/05/control/prepay")]
    public partial class TokenDownloadResult : object
    {
        
        private Ami_Control_Service.RequestToken RequestTokenField;
        
        private string ElectronicSerialNumberField;
        
        private Ami_Control_Service.Result ResultField;
        
        private Ami_Control_Service.TokenResult[] TokenResultsField;
        
        private Ami_Control_Service.EndpointFailure MeterFailureField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.RequestToken RequestToken
        {
            get
            {
                return this.RequestTokenField;
            }
            set
            {
                this.RequestTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string ElectronicSerialNumber
        {
            get
            {
                return this.ElectronicSerialNumberField;
            }
            set
            {
                this.ElectronicSerialNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public Ami_Control_Service.Result Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public Ami_Control_Service.TokenResult[] TokenResults
        {
            get
            {
                return this.TokenResultsField;
            }
            set
            {
                this.TokenResultsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public Ami_Control_Service.EndpointFailure MeterFailure
        {
            get
            {
                return this.MeterFailureField;
            }
            set
            {
                this.MeterFailureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenResult", Namespace="http://www.itron.com/ami/2014/05/control/prepay")]
    public partial class TokenResult : object
    {
        
        private string TokenField;
        
        private string ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentModeSwitchRequest", Namespace="http://www.itron.com/ami/2014/05/control/prepay")]
    public partial class PaymentModeSwitchRequest : object
    {
        
        private string[] TokenField;
        
        private Ami_Control_Service.EndpointRequest MeterRequestField;
        
        private Ami_Control_Service.MeterPaymentMode ModeField;
        
        private int IntendedGroupConfigurationField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public Ami_Control_Service.EndpointRequest MeterRequest
        {
            get
            {
                return this.MeterRequestField;
            }
            set
            {
                this.MeterRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public Ami_Control_Service.MeterPaymentMode Mode
        {
            get
            {
                return this.ModeField;
            }
            set
            {
                this.ModeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int IntendedGroupConfiguration
        {
            get
            {
                return this.IntendedGroupConfigurationField;
            }
            set
            {
                this.IntendedGroupConfigurationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeterPaymentMode", Namespace="http://www.itron.com/ami/2014/05/control/prepay")]
    public enum MeterPaymentMode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Post = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prepayment = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentModeSwitchResult", Namespace="http://www.itron.com/ami/2014/05/control/prepay")]
    public partial class PaymentModeSwitchResult : object
    {
        
        private Ami_Control_Service.RequestToken RequestTokenField;
        
        private string ElectronicSerialNumberField;
        
        private Ami_Control_Service.Result ResultField;
        
        private Ami_Control_Service.TokenResult[] TokenResultsField;
        
        private Ami_Control_Service.EndpointFailure MeterFailureField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.RequestToken RequestToken
        {
            get
            {
                return this.RequestTokenField;
            }
            set
            {
                this.RequestTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string ElectronicSerialNumber
        {
            get
            {
                return this.ElectronicSerialNumberField;
            }
            set
            {
                this.ElectronicSerialNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public Ami_Control_Service.Result Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public Ami_Control_Service.TokenResult[] TokenResults
        {
            get
            {
                return this.TokenResultsField;
            }
            set
            {
                this.TokenResultsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public Ami_Control_Service.EndpointFailure MeterFailure
        {
            get
            {
                return this.MeterFailureField;
            }
            set
            {
                this.MeterFailureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleRightSizingByMetersRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ScheduleRightSizingByMetersRequest : object
    {
        
        private Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequestField;
        
        private Ami_Control_Service.RightSizingParameters ParametersField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointCollectionRequest EndpointCollectionRequest
        {
            get
            {
                return this.EndpointCollectionRequestField;
            }
            set
            {
                this.EndpointCollectionRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.RightSizingParameters Parameters
        {
            get
            {
                return this.ParametersField;
            }
            set
            {
                this.ParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RightSizingParameters", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class RightSizingParameters : object
    {
        
        private System.DateTime StartDateField;
        
        private ushort NumberOfDaysField;
        
        private ushort SampleRateField;
        
        private Ami_Control_Service.MaxConsumptionOption ConsumptionOptionField;
        
        private ulong MaxExpectedIntervalConsumptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime StartDate
        {
            get
            {
                return this.StartDateField;
            }
            set
            {
                this.StartDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public ushort NumberOfDays
        {
            get
            {
                return this.NumberOfDaysField;
            }
            set
            {
                this.NumberOfDaysField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public ushort SampleRate
        {
            get
            {
                return this.SampleRateField;
            }
            set
            {
                this.SampleRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public Ami_Control_Service.MaxConsumptionOption ConsumptionOption
        {
            get
            {
                return this.ConsumptionOptionField;
            }
            set
            {
                this.ConsumptionOptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public ulong MaxExpectedIntervalConsumption
        {
            get
            {
                return this.MaxExpectedIntervalConsumptionField;
            }
            set
            {
                this.MaxExpectedIntervalConsumptionField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MaxConsumptionOption", Namespace="http://www.itron.com/ami/2008/10/control")]
    public enum MaxConsumptionOption : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseCurrentIntervals = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsePreviousRightSizing = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseExplicit = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleRightSizingByGroupRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ScheduleRightSizingByGroupRequest : object
    {
        
        private Ami_Control_Service.GroupRequest GroupNameField;
        
        private Ami_Control_Service.RightSizingParameters ParametersField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.GroupRequest GroupName
        {
            get
            {
                return this.GroupNameField;
            }
            set
            {
                this.GroupNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.RightSizingParameters Parameters
        {
            get
            {
                return this.ParametersField;
            }
            set
            {
                this.ParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayMessageByDevicesRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class DisplayMessageByDevicesRequest : object
    {
        
        private System.Collections.Generic.Dictionary<string, string> MeterMessagesField;
        
        private System.Uri StatusChangedServiceField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> MeterMessages
        {
            get
            {
                return this.MeterMessagesField;
            }
            set
            {
                this.MeterMessagesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri StatusChangedService
        {
            get
            {
                return this.StatusChangedServiceField;
            }
            set
            {
                this.StatusChangedServiceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResetCommModuleRequest", Namespace="http://www.itron.com/ami/2008/10/control")]
    public partial class ResetCommModuleRequest : object
    {
        
        private Ami_Control_Service.EndpointRequest EndpointRequestField;
        
        private System.Xml.XmlNode[] MetadataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Ami_Control_Service.EndpointRequest EndpointRequest
        {
            get
            {
                return this.EndpointRequestField;
            }
            set
            {
                this.EndpointRequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Xml.XmlNode[] Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.itron.com/ami/2008/10/control", ConfigurationName="Ami_Control_Service.ControlService")]
    public interface ControlService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DisconnectMeter", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DisconnectMeterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisconnectMeterArgumentFa" +
            "ult", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.MeterNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisconnectMeterMeterNotFo" +
            "undFault", Name="MeterNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.MeterNotRegisteredFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisconnectMeterMeterNotRe" +
            "gisteredFault", Name="MeterNotRegisteredFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisconnectMeterInvalidUri" +
            "FormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisconnectMeterTooManyCon" +
            "currentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisconnectMeterOperationF" +
            "ault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisconnectMeterSecurityFa" +
            "ult", Name="SecurityFault")]
        Ami_Control_Service.RequestToken DisconnectMeter(Ami_Control_Service.DisconnectMeterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DisconnectMeter", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DisconnectMeterResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DisconnectMeterAsync(Ami_Control_Service.DisconnectMeterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisconnectMeterResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDisconnectMeterResultR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisconnectMeterResultA" +
            "rgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisconnectMeterResultR" +
            "equestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisconnectMeterResultR" +
            "equestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisconnectMeterResultO" +
            "perationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisconnectMeterResultS" +
            "ecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisconnectMeterResultT" +
            "ooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointRequestResult GetDisconnectMeterResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisconnectMeterResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDisconnectMeterResultR" +
            "esponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointRequestResult> GetDisconnectMeterResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ReconnectMeter", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ReconnectMeterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReconnectMeterArgumentFau" +
            "lt", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.MeterNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReconnectMeterMeterNotFou" +
            "ndFault", Name="MeterNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.MeterNotRegisteredFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReconnectMeterMeterNotReg" +
            "isteredFault", Name="MeterNotRegisteredFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReconnectMeterInvalidUriF" +
            "ormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReconnectMeterTooManyConc" +
            "urrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReconnectMeterOperationFa" +
            "ult", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReconnectMeterSecurityFau" +
            "lt", Name="SecurityFault")]
        Ami_Control_Service.RequestToken ReconnectMeter(Ami_Control_Service.ReconnectMeterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ReconnectMeter", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ReconnectMeterResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ReconnectMeterAsync(Ami_Control_Service.ReconnectMeterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReconnectMeterResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetReconnectMeterResultRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReconnectMeterResultAr" +
            "gumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReconnectMeterResultRe" +
            "questNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReconnectMeterResultRe" +
            "questNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReconnectMeterResultOp" +
            "erationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReconnectMeterResultSe" +
            "curityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReconnectMeterResultTo" +
            "oManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointRequestResult GetReconnectMeterResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReconnectMeterResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetReconnectMeterResultRe" +
            "sponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointRequestResult> GetReconnectMeterResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/RestrictMeter", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/RestrictMeterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/RestrictMeterArgumentFaul" +
            "t", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.MeterNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/RestrictMeterMeterNotFoun" +
            "dFault", Name="MeterNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.MeterNotRegisteredFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/RestrictMeterMeterNotRegi" +
            "steredFault", Name="MeterNotRegisteredFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/RestrictMeterInvalidUriFo" +
            "rmatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/RestrictMeterTooManyConcu" +
            "rrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/RestrictMeterOperationFau" +
            "lt", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/RestrictMeterSecurityFaul" +
            "t", Name="SecurityFault")]
        Ami_Control_Service.RequestToken RestrictMeter(Ami_Control_Service.RestrictMeterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/RestrictMeter", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/RestrictMeterResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> RestrictMeterAsync(Ami_Control_Service.RestrictMeterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetRestrictMeterResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetRestrictMeterResultRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetRestrictMeterResultArg" +
            "umentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetRestrictMeterResultReq" +
            "uestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetRestrictMeterResultReq" +
            "uestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetRestrictMeterResultOpe" +
            "rationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetRestrictMeterResultSec" +
            "urityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetRestrictMeterResultToo" +
            "ManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointRequestResult GetRestrictMeterResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetRestrictMeterResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetRestrictMeterResultRes" +
            "ponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointRequestResult> GetRestrictMeterResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByGr" +
            "oup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByGr" +
            "oupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByGr" +
            "oupArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.GroupNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByGr" +
            "oupGroupNotFoundFault", Name="GroupNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByGr" +
            "oupInvalidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByGr" +
            "oupNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByGr" +
            "oupTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByGr" +
            "oupOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByGr" +
            "oupSecurityFault", Name="SecurityFault")]
        Ami_Control_Service.RequestToken DownloadConfigurationByGroup(Ami_Control_Service.DownloadConfigurationByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByGr" +
            "oup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByGr" +
            "oupResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DownloadConfigurationByGroupAsync(Ami_Control_Service.DownloadConfigurationByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yGroupResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yGroupResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yGroupResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yGroupResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yGroupResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yGroupResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yGroupResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.GroupRequestResult GetDownloadConfigurationByGroupResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yGroupResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetDownloadConfigurationByGroupResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByEn" +
            "dpoints", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByEn" +
            "dpointsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByEn" +
            "dpointsArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.GroupNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByEn" +
            "dpointsGroupNotFoundFault", Name="GroupNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByEn" +
            "dpointsInvalidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByEn" +
            "dpointsNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByEn" +
            "dpointsTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByEn" +
            "dpointsOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByEn" +
            "dpointsSecurityFault", Name="SecurityFault")]
        Ami_Control_Service.RequestToken DownloadConfigurationByEndpoints(Ami_Control_Service.DownloadConfigurationByEndpointsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByEn" +
            "dpoints", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DownloadConfigurationByEn" +
            "dpointsResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DownloadConfigurationByEndpointsAsync(Ami_Control_Service.DownloadConfigurationByEndpointsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yEndpointsResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yEndpointsResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yEndpointsResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yEndpointsResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yEndpointsResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yEndpointsResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yEndpointsResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yEndpointsResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointCollectionRequestResult GetDownloadConfigurationByEndpointsResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yEndpointsResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadConfigurationB" +
            "yEndpointsResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetDownloadConfigurationByEndpointsResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByMe" +
            "ters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByMe" +
            "tersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByMe" +
            "tersArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByMe" +
            "tersInvalidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByMe" +
            "tersNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByMe" +
            "tersTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByMe" +
            "tersOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByMe" +
            "tersSecurityFault", Name="SecurityFault")]
        Ami_Control_Service.RequestToken ChangeLimitingServiceByMeters(Ami_Control_Service.ChangeLimitingServiceByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByMe" +
            "ters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByMe" +
            "tersResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ChangeLimitingServiceByMetersAsync(Ami_Control_Service.ChangeLimitingServiceByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yMetersResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yMetersResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yMetersResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yMetersResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yMetersResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yMetersResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yMetersResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointCollectionRequestResult GetChangeLimitingServiceByMetersResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yMetersResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetChangeLimitingServiceByMetersResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByGr" +
            "oup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByGr" +
            "oupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByGr" +
            "oupArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.GroupNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByGr" +
            "oupGroupNotFoundFault", Name="GroupNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByGr" +
            "oupNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByGr" +
            "oupInvalidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByGr" +
            "oupTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByGr" +
            "oupOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByGr" +
            "oupSecurityFault", Name="SecurityFault")]
        Ami_Control_Service.RequestToken ChangeLimitingServiceByGroup(Ami_Control_Service.ChangeLimitingServiceByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByGr" +
            "oup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ChangeLimitingServiceByGr" +
            "oupResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ChangeLimitingServiceByGroupAsync(Ami_Control_Service.ChangeLimitingServiceByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yGroupResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yGroupResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yGroupResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yGroupResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yGroupResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yGroupResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yGroupResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.GroupRequestResult GetChangeLimitingServiceByGroupResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeLimitingServiceB" +
            "yGroupResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetChangeLimitingServiceByGroupResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByMet" +
            "ers", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByMet" +
            "ersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByMet" +
            "ersArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByMet" +
            "ersInvalidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByMet" +
            "ersTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByMet" +
            "ersOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByMet" +
            "ersSecurityFault", Name="SecurityFault")]
        Ami_Control_Service.RequestToken ClearServiceLimitingByMeters(Ami_Control_Service.ClearServiceLimitingByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByMet" +
            "ers", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByMet" +
            "ersResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ClearServiceLimitingByMetersAsync(Ami_Control_Service.ClearServiceLimitingByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "MetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "MetersResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "MetersResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "MetersResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "MetersResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "MetersResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "MetersResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "MetersResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointCollectionRequestResult GetClearServiceLimitingByMetersResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "MetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "MetersResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetClearServiceLimitingByMetersResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByGro" +
            "up", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByGro" +
            "upResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByGro" +
            "upArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.GroupNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByGro" +
            "upGroupNotFoundFault", Name="GroupNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByGro" +
            "upInvalidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByGro" +
            "upTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByGro" +
            "upOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByGro" +
            "upSecurityFault", Name="SecurityFault")]
        Ami_Control_Service.RequestToken ClearServiceLimitingByGroup(Ami_Control_Service.ClearServiceLimitingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByGro" +
            "up", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ClearServiceLimitingByGro" +
            "upResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ClearServiceLimitingByGroupAsync(Ami_Control_Service.ClearServiceLimitingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "GroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "GroupResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "GroupResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "GroupResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "GroupResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "GroupResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "GroupResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "GroupResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.GroupRequestResult GetClearServiceLimitingByGroupResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "GroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetClearServiceLimitingBy" +
            "GroupResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetClearServiceLimitingByGroupResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ReadServiceLimitingModeBy" +
            "Meters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ReadServiceLimitingModeBy" +
            "MetersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReadServiceLimitingModeBy" +
            "MetersArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.MeterNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReadServiceLimitingModeBy" +
            "MetersMeterNotFoundFault", Name="MeterNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.MeterNotRegisteredFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReadServiceLimitingModeBy" +
            "MetersMeterNotRegisteredFault", Name="MeterNotRegisteredFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReadServiceLimitingModeBy" +
            "MetersInvalidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReadServiceLimitingModeBy" +
            "MetersTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReadServiceLimitingModeBy" +
            "MetersOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ReadServiceLimitingModeBy" +
            "MetersSecurityFault", Name="SecurityFault")]
        Ami_Control_Service.RequestToken ReadServiceLimitingModeByMeters(Ami_Control_Service.ReadServiceLimitingModeByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ReadServiceLimitingModeBy" +
            "Meters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ReadServiceLimitingModeBy" +
            "MetersResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ReadServiceLimitingModeByMetersAsync(Ami_Control_Service.ReadServiceLimitingModeByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReadServiceLimitingMod" +
            "eByMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetReadServiceLimitingMod" +
            "eByMetersResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReadServiceLimitingMod" +
            "eByMetersResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReadServiceLimitingMod" +
            "eByMetersResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReadServiceLimitingMod" +
            "eByMetersResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReadServiceLimitingMod" +
            "eByMetersResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReadServiceLimitingMod" +
            "eByMetersResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReadServiceLimitingMod" +
            "eByMetersResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.ReadServiceLimitingModeByMetersResult GetReadServiceLimitingModeByMetersResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetReadServiceLimitingMod" +
            "eByMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetReadServiceLimitingMod" +
            "eByMetersResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.ReadServiceLimitingModeByMetersResult> GetReadServiceLimitingModeByMetersResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByEndpoints", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/PingByEndpointsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByEndpointsArgumentFa" +
            "ult", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByEndpointsNoValidTar" +
            "getsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByEndpointsInvalidUri" +
            "FormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByEndpointsTooManyCon" +
            "currentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByEndpointsOperationF" +
            "ault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByEndpointsSecurityFa" +
            "ult", Name="SecurityFault")]
        Ami_Control_Service.RequestToken PingByEndpoints(Ami_Control_Service.PingByEndpointsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByEndpoints", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/PingByEndpointsResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> PingByEndpointsAsync(Ami_Control_Service.PingByEndpointsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByEndpointsResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByEndpointsResultR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByEndpointsResultA" +
            "rgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByEndpointsResultR" +
            "equestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByEndpointsResultR" +
            "equestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByEndpointsResultO" +
            "perationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByEndpointsResultS" +
            "ecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByEndpointsResultT" +
            "ooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointCollectionRequestResult GetPingByEndpointsResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByEndpointsResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByEndpointsResultR" +
            "esponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetPingByEndpointsResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DetectLoadSideVoltageByMe" +
            "ter", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DetectLoadSideVoltageByMe" +
            "terResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DetectLoadSideVoltageByMe" +
            "terArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.MeterNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DetectLoadSideVoltageByMe" +
            "terMeterNotFoundFault", Name="MeterNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.MeterNotRegisteredFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DetectLoadSideVoltageByMe" +
            "terMeterNotRegisteredFault", Name="MeterNotRegisteredFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DetectLoadSideVoltageByMe" +
            "terInvalidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DetectLoadSideVoltageByMe" +
            "terTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DetectLoadSideVoltageByMe" +
            "terOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DetectLoadSideVoltageByMe" +
            "terSecurityFault", Name="SecurityFault")]
        Ami_Control_Service.RequestToken DetectLoadSideVoltageByMeter(Ami_Control_Service.DetectLoadSideVoltageByMeterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DetectLoadSideVoltageByMe" +
            "ter", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DetectLoadSideVoltageByMe" +
            "terResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DetectLoadSideVoltageByMeterAsync(Ami_Control_Service.DetectLoadSideVoltageByMeterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDetectLoadSideVoltageB" +
            "yMeterResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDetectLoadSideVoltageB" +
            "yMeterResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDetectLoadSideVoltageB" +
            "yMeterResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDetectLoadSideVoltageB" +
            "yMeterResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDetectLoadSideVoltageB" +
            "yMeterResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDetectLoadSideVoltageB" +
            "yMeterResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDetectLoadSideVoltageB" +
            "yMeterResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDetectLoadSideVoltageB" +
            "yMeterResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.DetectLoadSideVoltageByMeterResult GetDetectLoadSideVoltageByMeterResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDetectLoadSideVoltageB" +
            "yMeterResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDetectLoadSideVoltageB" +
            "yMeterResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.DetectLoadSideVoltageByMeterResult> GetDetectLoadSideVoltageByMeterResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByMeters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByMetersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByMetersOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByMetersSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationNotSupportedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByMetersOperationNotSupportedFault", Name="OperationNotSupportedFault")]
        Ami_Control_Service.RequestToken ActivateCriticalPeakPricingByMeters(Ami_Control_Service.CriticalPeakPricingByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByMeters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByMetersResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ActivateCriticalPeakPricingByMetersAsync(Ami_Control_Service.CriticalPeakPricingByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByMetersResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByMetersResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByMetersResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationNotSupportedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByMetersResultOperationNotSupportedFault", Name="OperationNotSupportedFault")]
        Ami_Control_Service.EndpointCollectionRequestResult GetActivateCriticalPeakPricingByMetersResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByMetersResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetActivateCriticalPeakPricingByMetersResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByGroup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.GroupNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByGroupGroupNotFoundFault", Name="GroupNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByGroupOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByGroupSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationNotSupportedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByGroupOperationNotSupportedFault", Name="OperationNotSupportedFault")]
        Ami_Control_Service.RequestToken ActivateCriticalPeakPricingByGroup(Ami_Control_Service.CriticalPeakPricingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByGroup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ActivateCriticalPeakPrici" +
            "ngByGroupResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ActivateCriticalPeakPricingByGroupAsync(Ami_Control_Service.CriticalPeakPricingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByGroupResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByGroupResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByGroupResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationNotSupportedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByGroupResultOperationNotSupportedFault", Name="OperationNotSupportedFault")]
        Ami_Control_Service.GroupRequestResult GetActivateCriticalPeakPricingByGroupResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetActivateCriticalPeakPr" +
            "icingByGroupResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetActivateCriticalPeakPricingByGroupResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByMeters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByMetersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByMetersArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidDateTimeRangeFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByMetersInvalidDateTimeRangeFault", Name="InvalidDateTimeRangeFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByMetersNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByMetersOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByMetersSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByMetersTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.RequestToken ScheduleCriticalPeakPricingByMeters(Ami_Control_Service.ScheduleCriticalPeakPricingByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByMeters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByMetersResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ScheduleCriticalPeakPricingByMetersAsync(Ami_Control_Service.ScheduleCriticalPeakPricingByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByMetersResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByMetersResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByMetersResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByMetersResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByMetersResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByMetersResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByMetersResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointCollectionRequestResult GetScheduleCriticalPeakPricingByMetersResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByMetersResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetScheduleCriticalPeakPricingByMetersResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByGroup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByGroupArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.GroupNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByGroupGroupNotFoundFault", Name="GroupNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidDateTimeRangeFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByGroupInvalidDateTimeRangeFault", Name="InvalidDateTimeRangeFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByGroupNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByGroupOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByGroupSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByGroupTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.RequestToken ScheduleCriticalPeakPricingByGroup(Ami_Control_Service.ScheduleCriticalPeakPricingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByGroup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleCriticalPeakPrici" +
            "ngByGroupResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ScheduleCriticalPeakPricingByGroupAsync(Ami_Control_Service.ScheduleCriticalPeakPricingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByGroupResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByGroupResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByGroupResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByGroupResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByGroupResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByGroupResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByGroupResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.GroupRequestResult GetScheduleCriticalPeakPricingByGroupResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleCriticalPeakPr" +
            "icingByGroupResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetScheduleCriticalPeakPricingByGroupResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByMeters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByMetersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByMetersArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByMetersNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByMetersOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByMetersSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByMetersTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.RequestToken CancelCriticalPeakPricingByMeters(Ami_Control_Service.CancelCriticalPeakPricingByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByMeters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByMetersResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> CancelCriticalPeakPricingByMetersAsync(Ami_Control_Service.CancelCriticalPeakPricingByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByMetersResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByMetersResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByMetersResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByMetersResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByMetersResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByMetersResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByMetersResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointCollectionRequestResult GetCancelCriticalPeakPricingByMetersResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByMetersResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetCancelCriticalPeakPricingByMetersResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByGroup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByGroupArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.GroupNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByGroupGroupNotFoundFault", Name="GroupNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByGroupNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByGroupOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByGroupSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByGroupTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.RequestToken CancelCriticalPeakPricingByGroup(Ami_Control_Service.CancelCriticalPeakPricingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByGroup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/CancelCriticalPeakPricing" +
            "ByGroupResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> CancelCriticalPeakPricingByGroupAsync(Ami_Control_Service.CancelCriticalPeakPricingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByGroupResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByGroupResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByGroupResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByGroupResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByGroupResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByGroupResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByGroupResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.GroupRequestResult GetCancelCriticalPeakPricingByGroupResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetCancelCriticalPeakPric" +
            "ingByGroupResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetCancelCriticalPeakPricingByGroupResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/SendGasModuleCommandByDev" +
            "ices", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/SendGasModuleCommandByDev" +
            "icesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/SendGasModuleCommandByDev" +
            "icesArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/SendGasModuleCommandByDev" +
            "icesNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/SendGasModuleCommandByDev" +
            "icesInvalidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/SendGasModuleCommandByDev" +
            "icesTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/SendGasModuleCommandByDev" +
            "icesOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/SendGasModuleCommandByDev" +
            "icesSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyCommandsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/SendGasModuleCommandByDev" +
            "icesTooManyCommandsFault", Name="TooManyCommandsFault")]
        Ami_Control_Service.RequestToken SendGasModuleCommandByDevices(Ami_Control_Service.SendGasModuleCommandByDevicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/SendGasModuleCommandByDev" +
            "ices", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/SendGasModuleCommandByDev" +
            "icesResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> SendGasModuleCommandByDevicesAsync(Ami_Control_Service.SendGasModuleCommandByDevicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetGasModuleCommandByDevi" +
            "cesResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetGasModuleCommandByDevi" +
            "cesResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetGasModuleCommandByDevi" +
            "cesResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetGasModuleCommandByDevi" +
            "cesResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetGasModuleCommandByDevi" +
            "cesResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetGasModuleCommandByDevi" +
            "cesResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetGasModuleCommandByDevi" +
            "cesResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetGasModuleCommandByDevi" +
            "cesResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.DeviceCollectionRequestResult GetGasModuleCommandByDevicesResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetGasModuleCommandByDevi" +
            "cesResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetGasModuleCommandByDevi" +
            "cesResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.DeviceCollectionRequestResult> GetGasModuleCommandByDevicesResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByGroup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/PingByGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByGroupArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.GroupNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByGroupGroupNotFoundF" +
            "ault", Name="GroupNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByGroupInvalidUriForm" +
            "atFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByGroupNoValidTargets" +
            "FoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByGroupTooManyConcurr" +
            "entRequestsFault", Name="TooManyConcurrentRequestsFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByGroupOperationFault" +
            "", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByGroupSecurityFault", Name="SecurityFault")]
        Ami_Control_Service.RequestToken PingByGroup(Ami_Control_Service.PingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/PingByGroup", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/PingByGroupResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> PingByGroupAsync(Ami_Control_Service.PingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByGroupResultRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByGroupResultArgum" +
            "entFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByGroupResultReque" +
            "stNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByGroupResultReque" +
            "stNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByGroupResultOpera" +
            "tionFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByGroupResultSecur" +
            "ityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByGroupResultTooMa" +
            "nyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.GroupRequestResult GetPingByGroupResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByGroupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetPingByGroupResultRespo" +
            "nse")]
        System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetPingByGroupResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/EnableHaltedZigBeeRadioBy" +
            "Meters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/EnableHaltedZigBeeRadioBy" +
            "MetersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/EnableHaltedZigBeeRadioBy" +
            "MetersArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/EnableHaltedZigBeeRadioBy" +
            "MetersNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/EnableHaltedZigBeeRadioBy" +
            "MetersOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/EnableHaltedZigBeeRadioBy" +
            "MetersSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/EnableHaltedZigBeeRadioBy" +
            "MetersTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.RequestToken EnableHaltedZigBeeRadioByMeters(Ami_Control_Service.EnableHaltedZigBeeRadioByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/EnableHaltedZigBeeRadioBy" +
            "Meters", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/EnableHaltedZigBeeRadioBy" +
            "MetersResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> EnableHaltedZigBeeRadioByMetersAsync(Ami_Control_Service.EnableHaltedZigBeeRadioByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetEnableHaltedZigBeeRadi" +
            "oByMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetEnableHaltedZigBeeRadi" +
            "oByMetersResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetEnableHaltedZigBeeRadi" +
            "oByMetersResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetEnableHaltedZigBeeRadi" +
            "oByMetersResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetEnableHaltedZigBeeRadi" +
            "oByMetersResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetEnableHaltedZigBeeRadi" +
            "oByMetersResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetEnableHaltedZigBeeRadi" +
            "oByMetersResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetEnableHaltedZigBeeRadi" +
            "oByMetersResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointRequestResult GetEnableHaltedZigBeeRadioByMetersResult(Ami_Control_Service.RequestToken requestToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetEnableHaltedZigBeeRadi" +
            "oByMetersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetEnableHaltedZigBeeRadi" +
            "oByMetersResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointRequestResult> GetEnableHaltedZigBeeRadioByMetersResultAsync(Ami_Control_Service.RequestToken requestToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeAllowC1218OverZigbe" +
            "eFlag", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ChangeAllowC1218OverZigbe" +
            "eFlagResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeAllowC1218OverZigbe" +
            "eFlagArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeAllowC1218OverZigbe" +
            "eFlagNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeAllowC1218OverZigbe" +
            "eFlagInvalidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeAllowC1218OverZigbe" +
            "eFlagOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeAllowC1218OverZigbe" +
            "eFlagSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeAllowC1218OverZigbe" +
            "eFlagTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.RequestToken ChangeAllowC1218OverZigbeeFlag(Ami_Control_Service.ChangeAllowC1218OverZigbeeFlagByEndpointsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ChangeAllowC1218OverZigbe" +
            "eFlag", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ChangeAllowC1218OverZigbe" +
            "eFlagResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ChangeAllowC1218OverZigbeeFlagAsync(Ami_Control_Service.ChangeAllowC1218OverZigbeeFlagByEndpointsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeAllowC1218OverZi" +
            "gbeeFlagResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeAllowC1218OverZi" +
            "gbeeFlagResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeAllowC1218OverZi" +
            "gbeeFlagResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeAllowC1218OverZi" +
            "gbeeFlagResultRequestNotFoundFault", Name="RequestNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.RequestNotFinishedFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeAllowC1218OverZi" +
            "gbeeFlagResultRequestNotFinishedFault", Name="RequestNotFinishedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeAllowC1218OverZi" +
            "gbeeFlagResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeAllowC1218OverZi" +
            "gbeeFlagResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeAllowC1218OverZi" +
            "gbeeFlagResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointCollectionRequestResult GetChangeAllowC1218OverZigbeeFlagResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeAllowC1218OverZi" +
            "gbeeFlagResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetChangeAllowC1218OverZi" +
            "gbeeFlagResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetChangeAllowC1218OverZigbeeFlagResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadToken", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DownloadTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadTokenArgumentFaul" +
            "t", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadTokenNoValidTarge" +
            "tsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadTokenInvalidUriFo" +
            "rmatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadTokenOperationFau" +
            "lt", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadTokenSecurityFaul" +
            "t", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadTokenTooManyConcu" +
            "rrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.RequestToken DownloadToken(Ami_Control_Service.DownloadTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DownloadToken", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DownloadTokenResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DownloadTokenAsync(Ami_Control_Service.DownloadTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadTokenResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadTokenResultRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadTokenResultArg" +
            "umentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadTokenResultNoV" +
            "alidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadTokenResultInv" +
            "alidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadTokenResultOpe" +
            "rationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadTokenResultSec" +
            "urityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadTokenResultToo" +
            "ManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.TokenDownloadResult GetDownloadTokenResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadTokenResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDownloadTokenResultRes" +
            "ponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.TokenDownloadResult> GetDownloadTokenResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/PaymentModeSwitch", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/PaymentModeSwitchResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PaymentModeSwitchArgument" +
            "Fault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PaymentModeSwitchNoValidT" +
            "argetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PaymentModeSwitchInvalidU" +
            "riFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PaymentModeSwitchOperatio" +
            "nFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PaymentModeSwitchSecurity" +
            "Fault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/PaymentModeSwitchTooManyC" +
            "oncurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.RequestToken PaymentModeSwitch(Ami_Control_Service.PaymentModeSwitchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/PaymentModeSwitch", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/PaymentModeSwitchResponse" +
            "")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> PaymentModeSwitchAsync(Ami_Control_Service.PaymentModeSwitchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPaymentModeSwitchResul" +
            "t", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetPaymentModeSwitchResul" +
            "tResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPaymentModeSwitchResul" +
            "tArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPaymentModeSwitchResul" +
            "tNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidUriFormatFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPaymentModeSwitchResul" +
            "tInvalidUriFormatFault", Name="InvalidUriFormatFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPaymentModeSwitchResul" +
            "tOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPaymentModeSwitchResul" +
            "tSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPaymentModeSwitchResul" +
            "tTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.PaymentModeSwitchResult GetPaymentModeSwitchResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetPaymentModeSwitchResul" +
            "t", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetPaymentModeSwitchResul" +
            "tResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.PaymentModeSwitchResult> GetPaymentModeSwitchResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByMete" +
            "rs", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByMete" +
            "rsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByMete" +
            "rsArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidDateTimeRangeFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByMete" +
            "rsInvalidDateTimeRangeFault", Name="InvalidDateTimeRangeFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByMete" +
            "rsNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByMete" +
            "rsOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByMete" +
            "rsSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByMete" +
            "rsTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.RequestToken ScheduleRightSizingByMeters(Ami_Control_Service.ScheduleRightSizingByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByMete" +
            "rs", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByMete" +
            "rsResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ScheduleRightSizingByMetersAsync(Ami_Control_Service.ScheduleRightSizingByMetersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByM" +
            "etersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByM" +
            "etersResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByM" +
            "etersResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidDateTimeRangeFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByM" +
            "etersResultInvalidDateTimeRangeFault", Name="InvalidDateTimeRangeFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByM" +
            "etersResultNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByM" +
            "etersResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByM" +
            "etersResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByM" +
            "etersResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointCollectionRequestResult GetScheduleRightSizingByMetersResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByM" +
            "etersResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByM" +
            "etersResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetScheduleRightSizingByMetersResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByGrou" +
            "p", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByGrou" +
            "pResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByGrou" +
            "pArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidDateTimeRangeFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByGrou" +
            "pInvalidDateTimeRangeFault", Name="InvalidDateTimeRangeFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByGrou" +
            "pNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByGrou" +
            "pOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByGrou" +
            "pSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByGrou" +
            "pTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.RequestToken ScheduleRightSizingByGroup(Ami_Control_Service.ScheduleRightSizingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByGrou" +
            "p", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ScheduleRightSizingByGrou" +
            "pResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ScheduleRightSizingByGroupAsync(Ami_Control_Service.ScheduleRightSizingByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByG" +
            "roupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByG" +
            "roupResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByG" +
            "roupResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByG" +
            "roupResultNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByG" +
            "roupResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByG" +
            "roupResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByG" +
            "roupResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.GroupRequestResult GetScheduleRightSizingByGroupResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByG" +
            "roupResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetScheduleRightSizingByG" +
            "roupResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetScheduleRightSizingByGroupResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DisplayMessageByDevices", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DisplayMessageByDevicesRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisplayMessageByDevicesAr" +
            "gumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidDateTimeRangeFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisplayMessageByDevicesIn" +
            "validDateTimeRangeFault", Name="InvalidDateTimeRangeFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisplayMessageByDevicesNo" +
            "ValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisplayMessageByDevicesOp" +
            "erationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisplayMessageByDevicesSe" +
            "curityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/DisplayMessageByDevicesTo" +
            "oManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.RequestToken DisplayMessageByDevices(Ami_Control_Service.DisplayMessageByDevicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/DisplayMessageByDevices", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/DisplayMessageByDevicesRe" +
            "sponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DisplayMessageByDevicesAsync(Ami_Control_Service.DisplayMessageByDevicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisplayMessageByDevice" +
            "sResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDisplayMessageByDevice" +
            "sResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisplayMessageByDevice" +
            "sResultArgumentFault", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.InvalidDateTimeRangeFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisplayMessageByDevice" +
            "sResultInvalidDateTimeRangeFault", Name="InvalidDateTimeRangeFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.NoValidTargetsFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisplayMessageByDevice" +
            "sResultNoValidTargetsFoundFault", Name="NoValidTargetsFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisplayMessageByDevice" +
            "sResultOperationFault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisplayMessageByDevice" +
            "sResultSecurityFault", Name="SecurityFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.TooManyConcurrentRequestsFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisplayMessageByDevice" +
            "sResultTooManyConcurrentRequestsFault", Name="TooManyConcurrentRequestsFault")]
        Ami_Control_Service.EndpointCollectionRequestResult GetDisplayMessageByDevicesResult(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/GetDisplayMessageByDevice" +
            "sResult", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/GetDisplayMessageByDevice" +
            "sResultResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetDisplayMessageByDevicesResultAsync(Ami_Control_Service.RequestToken input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ResetCommModule", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ResetCommModuleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.ArgumentFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ResetCommModuleArgumentFa" +
            "ult", Name="ArgumentFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.MeterNotFoundFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ResetCommModuleMeterNotFo" +
            "undFault", Name="MeterNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.OperationFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ResetCommModuleOperationF" +
            "ault", Name="OperationFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ami_Control_Service.SecurityFault), Action="http://www.itron.com/ami/2008/10/control/ControlService/ResetCommModuleSecurityFa" +
            "ult", Name="SecurityFault")]
        Ami_Control_Service.RequestToken ResetCommModule(Ami_Control_Service.ResetCommModuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/ami/2008/10/control/ControlService/ResetCommModule", ReplyAction="http://www.itron.com/ami/2008/10/control/ControlService/ResetCommModuleResponse")]
        System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ResetCommModuleAsync(Ami_Control_Service.ResetCommModuleRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ControlServiceChannel : Ami_Control_Service.ControlService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ControlServiceClient : System.ServiceModel.ClientBase<Ami_Control_Service.ControlService>, Ami_Control_Service.ControlService
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ControlServiceClient() : 
                base(ControlServiceClient.GetDefaultBinding(), ControlServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ControlService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ControlServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ControlServiceClient.GetBindingForEndpoint(endpointConfiguration), ControlServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ControlServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ControlServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ControlServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ControlServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ControlServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public Ami_Control_Service.RequestToken DisconnectMeter(Ami_Control_Service.DisconnectMeterRequest request)
        {
            return base.Channel.DisconnectMeter(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DisconnectMeterAsync(Ami_Control_Service.DisconnectMeterRequest request)
        {
            return base.Channel.DisconnectMeterAsync(request);
        }
        
        public Ami_Control_Service.EndpointRequestResult GetDisconnectMeterResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDisconnectMeterResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointRequestResult> GetDisconnectMeterResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDisconnectMeterResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ReconnectMeter(Ami_Control_Service.ReconnectMeterRequest request)
        {
            return base.Channel.ReconnectMeter(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ReconnectMeterAsync(Ami_Control_Service.ReconnectMeterRequest request)
        {
            return base.Channel.ReconnectMeterAsync(request);
        }
        
        public Ami_Control_Service.EndpointRequestResult GetReconnectMeterResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetReconnectMeterResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointRequestResult> GetReconnectMeterResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetReconnectMeterResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken RestrictMeter(Ami_Control_Service.RestrictMeterRequest request)
        {
            return base.Channel.RestrictMeter(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> RestrictMeterAsync(Ami_Control_Service.RestrictMeterRequest request)
        {
            return base.Channel.RestrictMeterAsync(request);
        }
        
        public Ami_Control_Service.EndpointRequestResult GetRestrictMeterResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetRestrictMeterResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointRequestResult> GetRestrictMeterResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetRestrictMeterResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken DownloadConfigurationByGroup(Ami_Control_Service.DownloadConfigurationByGroupRequest request)
        {
            return base.Channel.DownloadConfigurationByGroup(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DownloadConfigurationByGroupAsync(Ami_Control_Service.DownloadConfigurationByGroupRequest request)
        {
            return base.Channel.DownloadConfigurationByGroupAsync(request);
        }
        
        public Ami_Control_Service.GroupRequestResult GetDownloadConfigurationByGroupResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDownloadConfigurationByGroupResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetDownloadConfigurationByGroupResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDownloadConfigurationByGroupResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken DownloadConfigurationByEndpoints(Ami_Control_Service.DownloadConfigurationByEndpointsRequest request)
        {
            return base.Channel.DownloadConfigurationByEndpoints(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DownloadConfigurationByEndpointsAsync(Ami_Control_Service.DownloadConfigurationByEndpointsRequest request)
        {
            return base.Channel.DownloadConfigurationByEndpointsAsync(request);
        }
        
        public Ami_Control_Service.EndpointCollectionRequestResult GetDownloadConfigurationByEndpointsResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDownloadConfigurationByEndpointsResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetDownloadConfigurationByEndpointsResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDownloadConfigurationByEndpointsResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ChangeLimitingServiceByMeters(Ami_Control_Service.ChangeLimitingServiceByMetersRequest request)
        {
            return base.Channel.ChangeLimitingServiceByMeters(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ChangeLimitingServiceByMetersAsync(Ami_Control_Service.ChangeLimitingServiceByMetersRequest request)
        {
            return base.Channel.ChangeLimitingServiceByMetersAsync(request);
        }
        
        public Ami_Control_Service.EndpointCollectionRequestResult GetChangeLimitingServiceByMetersResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetChangeLimitingServiceByMetersResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetChangeLimitingServiceByMetersResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetChangeLimitingServiceByMetersResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ChangeLimitingServiceByGroup(Ami_Control_Service.ChangeLimitingServiceByGroupRequest request)
        {
            return base.Channel.ChangeLimitingServiceByGroup(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ChangeLimitingServiceByGroupAsync(Ami_Control_Service.ChangeLimitingServiceByGroupRequest request)
        {
            return base.Channel.ChangeLimitingServiceByGroupAsync(request);
        }
        
        public Ami_Control_Service.GroupRequestResult GetChangeLimitingServiceByGroupResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetChangeLimitingServiceByGroupResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetChangeLimitingServiceByGroupResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetChangeLimitingServiceByGroupResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ClearServiceLimitingByMeters(Ami_Control_Service.ClearServiceLimitingByMetersRequest request)
        {
            return base.Channel.ClearServiceLimitingByMeters(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ClearServiceLimitingByMetersAsync(Ami_Control_Service.ClearServiceLimitingByMetersRequest request)
        {
            return base.Channel.ClearServiceLimitingByMetersAsync(request);
        }
        
        public Ami_Control_Service.EndpointCollectionRequestResult GetClearServiceLimitingByMetersResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetClearServiceLimitingByMetersResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetClearServiceLimitingByMetersResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetClearServiceLimitingByMetersResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ClearServiceLimitingByGroup(Ami_Control_Service.ClearServiceLimitingByGroupRequest request)
        {
            return base.Channel.ClearServiceLimitingByGroup(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ClearServiceLimitingByGroupAsync(Ami_Control_Service.ClearServiceLimitingByGroupRequest request)
        {
            return base.Channel.ClearServiceLimitingByGroupAsync(request);
        }
        
        public Ami_Control_Service.GroupRequestResult GetClearServiceLimitingByGroupResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetClearServiceLimitingByGroupResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetClearServiceLimitingByGroupResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetClearServiceLimitingByGroupResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ReadServiceLimitingModeByMeters(Ami_Control_Service.ReadServiceLimitingModeByMetersRequest request)
        {
            return base.Channel.ReadServiceLimitingModeByMeters(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ReadServiceLimitingModeByMetersAsync(Ami_Control_Service.ReadServiceLimitingModeByMetersRequest request)
        {
            return base.Channel.ReadServiceLimitingModeByMetersAsync(request);
        }
        
        public Ami_Control_Service.ReadServiceLimitingModeByMetersResult GetReadServiceLimitingModeByMetersResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetReadServiceLimitingModeByMetersResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.ReadServiceLimitingModeByMetersResult> GetReadServiceLimitingModeByMetersResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetReadServiceLimitingModeByMetersResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken PingByEndpoints(Ami_Control_Service.PingByEndpointsRequest request)
        {
            return base.Channel.PingByEndpoints(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> PingByEndpointsAsync(Ami_Control_Service.PingByEndpointsRequest request)
        {
            return base.Channel.PingByEndpointsAsync(request);
        }
        
        public Ami_Control_Service.EndpointCollectionRequestResult GetPingByEndpointsResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetPingByEndpointsResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetPingByEndpointsResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetPingByEndpointsResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken DetectLoadSideVoltageByMeter(Ami_Control_Service.DetectLoadSideVoltageByMeterRequest request)
        {
            return base.Channel.DetectLoadSideVoltageByMeter(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DetectLoadSideVoltageByMeterAsync(Ami_Control_Service.DetectLoadSideVoltageByMeterRequest request)
        {
            return base.Channel.DetectLoadSideVoltageByMeterAsync(request);
        }
        
        public Ami_Control_Service.DetectLoadSideVoltageByMeterResult GetDetectLoadSideVoltageByMeterResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDetectLoadSideVoltageByMeterResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.DetectLoadSideVoltageByMeterResult> GetDetectLoadSideVoltageByMeterResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDetectLoadSideVoltageByMeterResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ActivateCriticalPeakPricingByMeters(Ami_Control_Service.CriticalPeakPricingByMetersRequest request)
        {
            return base.Channel.ActivateCriticalPeakPricingByMeters(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ActivateCriticalPeakPricingByMetersAsync(Ami_Control_Service.CriticalPeakPricingByMetersRequest request)
        {
            return base.Channel.ActivateCriticalPeakPricingByMetersAsync(request);
        }
        
        public Ami_Control_Service.EndpointCollectionRequestResult GetActivateCriticalPeakPricingByMetersResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetActivateCriticalPeakPricingByMetersResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetActivateCriticalPeakPricingByMetersResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetActivateCriticalPeakPricingByMetersResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ActivateCriticalPeakPricingByGroup(Ami_Control_Service.CriticalPeakPricingByGroupRequest request)
        {
            return base.Channel.ActivateCriticalPeakPricingByGroup(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ActivateCriticalPeakPricingByGroupAsync(Ami_Control_Service.CriticalPeakPricingByGroupRequest request)
        {
            return base.Channel.ActivateCriticalPeakPricingByGroupAsync(request);
        }
        
        public Ami_Control_Service.GroupRequestResult GetActivateCriticalPeakPricingByGroupResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetActivateCriticalPeakPricingByGroupResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetActivateCriticalPeakPricingByGroupResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetActivateCriticalPeakPricingByGroupResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ScheduleCriticalPeakPricingByMeters(Ami_Control_Service.ScheduleCriticalPeakPricingByMetersRequest request)
        {
            return base.Channel.ScheduleCriticalPeakPricingByMeters(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ScheduleCriticalPeakPricingByMetersAsync(Ami_Control_Service.ScheduleCriticalPeakPricingByMetersRequest request)
        {
            return base.Channel.ScheduleCriticalPeakPricingByMetersAsync(request);
        }
        
        public Ami_Control_Service.EndpointCollectionRequestResult GetScheduleCriticalPeakPricingByMetersResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetScheduleCriticalPeakPricingByMetersResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetScheduleCriticalPeakPricingByMetersResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetScheduleCriticalPeakPricingByMetersResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ScheduleCriticalPeakPricingByGroup(Ami_Control_Service.ScheduleCriticalPeakPricingByGroupRequest request)
        {
            return base.Channel.ScheduleCriticalPeakPricingByGroup(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ScheduleCriticalPeakPricingByGroupAsync(Ami_Control_Service.ScheduleCriticalPeakPricingByGroupRequest request)
        {
            return base.Channel.ScheduleCriticalPeakPricingByGroupAsync(request);
        }
        
        public Ami_Control_Service.GroupRequestResult GetScheduleCriticalPeakPricingByGroupResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetScheduleCriticalPeakPricingByGroupResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetScheduleCriticalPeakPricingByGroupResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetScheduleCriticalPeakPricingByGroupResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken CancelCriticalPeakPricingByMeters(Ami_Control_Service.CancelCriticalPeakPricingByMetersRequest request)
        {
            return base.Channel.CancelCriticalPeakPricingByMeters(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> CancelCriticalPeakPricingByMetersAsync(Ami_Control_Service.CancelCriticalPeakPricingByMetersRequest request)
        {
            return base.Channel.CancelCriticalPeakPricingByMetersAsync(request);
        }
        
        public Ami_Control_Service.EndpointCollectionRequestResult GetCancelCriticalPeakPricingByMetersResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetCancelCriticalPeakPricingByMetersResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetCancelCriticalPeakPricingByMetersResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetCancelCriticalPeakPricingByMetersResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken CancelCriticalPeakPricingByGroup(Ami_Control_Service.CancelCriticalPeakPricingByGroupRequest request)
        {
            return base.Channel.CancelCriticalPeakPricingByGroup(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> CancelCriticalPeakPricingByGroupAsync(Ami_Control_Service.CancelCriticalPeakPricingByGroupRequest request)
        {
            return base.Channel.CancelCriticalPeakPricingByGroupAsync(request);
        }
        
        public Ami_Control_Service.GroupRequestResult GetCancelCriticalPeakPricingByGroupResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetCancelCriticalPeakPricingByGroupResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetCancelCriticalPeakPricingByGroupResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetCancelCriticalPeakPricingByGroupResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken SendGasModuleCommandByDevices(Ami_Control_Service.SendGasModuleCommandByDevicesRequest request)
        {
            return base.Channel.SendGasModuleCommandByDevices(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> SendGasModuleCommandByDevicesAsync(Ami_Control_Service.SendGasModuleCommandByDevicesRequest request)
        {
            return base.Channel.SendGasModuleCommandByDevicesAsync(request);
        }
        
        public Ami_Control_Service.DeviceCollectionRequestResult GetGasModuleCommandByDevicesResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetGasModuleCommandByDevicesResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.DeviceCollectionRequestResult> GetGasModuleCommandByDevicesResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetGasModuleCommandByDevicesResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken PingByGroup(Ami_Control_Service.PingByGroupRequest request)
        {
            return base.Channel.PingByGroup(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> PingByGroupAsync(Ami_Control_Service.PingByGroupRequest request)
        {
            return base.Channel.PingByGroupAsync(request);
        }
        
        public Ami_Control_Service.GroupRequestResult GetPingByGroupResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetPingByGroupResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetPingByGroupResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetPingByGroupResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken EnableHaltedZigBeeRadioByMeters(Ami_Control_Service.EnableHaltedZigBeeRadioByMetersRequest request)
        {
            return base.Channel.EnableHaltedZigBeeRadioByMeters(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> EnableHaltedZigBeeRadioByMetersAsync(Ami_Control_Service.EnableHaltedZigBeeRadioByMetersRequest request)
        {
            return base.Channel.EnableHaltedZigBeeRadioByMetersAsync(request);
        }
        
        public Ami_Control_Service.EndpointRequestResult GetEnableHaltedZigBeeRadioByMetersResult(Ami_Control_Service.RequestToken requestToken)
        {
            return base.Channel.GetEnableHaltedZigBeeRadioByMetersResult(requestToken);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointRequestResult> GetEnableHaltedZigBeeRadioByMetersResultAsync(Ami_Control_Service.RequestToken requestToken)
        {
            return base.Channel.GetEnableHaltedZigBeeRadioByMetersResultAsync(requestToken);
        }
        
        public Ami_Control_Service.RequestToken ChangeAllowC1218OverZigbeeFlag(Ami_Control_Service.ChangeAllowC1218OverZigbeeFlagByEndpointsRequest request)
        {
            return base.Channel.ChangeAllowC1218OverZigbeeFlag(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ChangeAllowC1218OverZigbeeFlagAsync(Ami_Control_Service.ChangeAllowC1218OverZigbeeFlagByEndpointsRequest request)
        {
            return base.Channel.ChangeAllowC1218OverZigbeeFlagAsync(request);
        }
        
        public Ami_Control_Service.EndpointCollectionRequestResult GetChangeAllowC1218OverZigbeeFlagResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetChangeAllowC1218OverZigbeeFlagResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetChangeAllowC1218OverZigbeeFlagResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetChangeAllowC1218OverZigbeeFlagResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken DownloadToken(Ami_Control_Service.DownloadTokenRequest request)
        {
            return base.Channel.DownloadToken(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DownloadTokenAsync(Ami_Control_Service.DownloadTokenRequest request)
        {
            return base.Channel.DownloadTokenAsync(request);
        }
        
        public Ami_Control_Service.TokenDownloadResult GetDownloadTokenResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDownloadTokenResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.TokenDownloadResult> GetDownloadTokenResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDownloadTokenResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken PaymentModeSwitch(Ami_Control_Service.PaymentModeSwitchRequest request)
        {
            return base.Channel.PaymentModeSwitch(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> PaymentModeSwitchAsync(Ami_Control_Service.PaymentModeSwitchRequest request)
        {
            return base.Channel.PaymentModeSwitchAsync(request);
        }
        
        public Ami_Control_Service.PaymentModeSwitchResult GetPaymentModeSwitchResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetPaymentModeSwitchResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.PaymentModeSwitchResult> GetPaymentModeSwitchResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetPaymentModeSwitchResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ScheduleRightSizingByMeters(Ami_Control_Service.ScheduleRightSizingByMetersRequest request)
        {
            return base.Channel.ScheduleRightSizingByMeters(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ScheduleRightSizingByMetersAsync(Ami_Control_Service.ScheduleRightSizingByMetersRequest request)
        {
            return base.Channel.ScheduleRightSizingByMetersAsync(request);
        }
        
        public Ami_Control_Service.EndpointCollectionRequestResult GetScheduleRightSizingByMetersResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetScheduleRightSizingByMetersResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetScheduleRightSizingByMetersResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetScheduleRightSizingByMetersResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ScheduleRightSizingByGroup(Ami_Control_Service.ScheduleRightSizingByGroupRequest request)
        {
            return base.Channel.ScheduleRightSizingByGroup(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ScheduleRightSizingByGroupAsync(Ami_Control_Service.ScheduleRightSizingByGroupRequest request)
        {
            return base.Channel.ScheduleRightSizingByGroupAsync(request);
        }
        
        public Ami_Control_Service.GroupRequestResult GetScheduleRightSizingByGroupResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetScheduleRightSizingByGroupResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.GroupRequestResult> GetScheduleRightSizingByGroupResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetScheduleRightSizingByGroupResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken DisplayMessageByDevices(Ami_Control_Service.DisplayMessageByDevicesRequest request)
        {
            return base.Channel.DisplayMessageByDevices(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> DisplayMessageByDevicesAsync(Ami_Control_Service.DisplayMessageByDevicesRequest request)
        {
            return base.Channel.DisplayMessageByDevicesAsync(request);
        }
        
        public Ami_Control_Service.EndpointCollectionRequestResult GetDisplayMessageByDevicesResult(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDisplayMessageByDevicesResult(input);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.EndpointCollectionRequestResult> GetDisplayMessageByDevicesResultAsync(Ami_Control_Service.RequestToken input)
        {
            return base.Channel.GetDisplayMessageByDevicesResultAsync(input);
        }
        
        public Ami_Control_Service.RequestToken ResetCommModule(Ami_Control_Service.ResetCommModuleRequest request)
        {
            return base.Channel.ResetCommModule(request);
        }
        
        public System.Threading.Tasks.Task<Ami_Control_Service.RequestToken> ResetCommModuleAsync(Ami_Control_Service.ResetCommModuleRequest request)
        {
            return base.Channel.ResetCommModuleAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ControlService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ControlService))
            {
                return new System.ServiceModel.EndpointAddress("http://crsh2-p-ow-cm:8103/ami/2008/10/control");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ControlServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ControlService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ControlServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ControlService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ControlService,
        }
    }
}
